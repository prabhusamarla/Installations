sudo su
apt update
apt install docker.io
#check status of service
$ systemctl status docker
#enable docker to run at bootup time
$ sudo systemctl enable.service

---------------------------
By default, the docker command can only be run the root user or by a user in the docker group, which is automatically created during Docker’s installation process.
If you attempt to run the docker command without prefixing it with sudo or without being in the docker group, you’ll get an output like this:

Output
ssm-user@ip-10-0-3-15:/var/snap/amazon-ssm-agent/4046$ docker images
Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.24/
images/json: dial unix /var/run/docker.sock: connect: permission denied

If you want to avoid typing sudo whenever you run the docker command, add your username to the docker group:

sudo usermod -aG docker ${USER}
To apply the new group membership, log out of the server and back in, or type the following:

su - ${USER}
You will be prompted to enter your user’s password to continue.

Confirm that your user is now added to the docker group by typing:

groups
Output
sammy sudo docker
If you need to add a user to the docker group that you’re not logged in as, declare that username explicitly using:

sudo usermod -aG docker username
The rest of this article assumes you are running the docker command as a user in the docker group. If you choose not to, please prepend the commands with sudo.

Let’s explore the docker command next.
